---
# WORKER SECTION

- name: Get a list of all the worker only nodes
  group_by:
    key: "worker_only_hosts_{{ 'yes' if (rke2_worker | bool) and (not rke2_controlplane | bool) else 'no' }}"

- name: Create list of all the worker only nodes
  set_fact:
    worker_only_hosts: "{{ groups['worker_only_hosts_yes'] }}"
  run_once: True

- name: DEBUG print list of worker only nodes
  debug:
    msg: "{{ worker_only_hosts }}"
  run_once: True

- name: Install RKE2 agent on additional nodes that are worker
  ansible.builtin.shell: |
      /root/install.sh
  environment:
    INSTALL_RKE2_TYPE: "agent"
  when: ( rke2_worker | bool ) and ( not rke2_controlplane | bool )

- name: On workers, add the StandardOutput options to the rke2-agent.service file (1/2)
  ansible.builtin.lineinfile:
    path: /usr/local/lib/systemd/system/rke2-agent.service
    insertafter: "^\\[Service\\]$"
    line: "StandardOutput=journal"
    state: present
  when: ( rke2_worker | bool ) and ( not rke2_controlplane | bool )

- name: On workers, add the StandardError options to the rke2-agent.service file (2/2)
  ansible.builtin.lineinfile:
    path: /usr/local/lib/systemd/system/rke2-agent.service
    insertafter: "^\\[Service\\]$"
    line: "StandardError=journal"
    state: present
  when: ( rke2_worker | bool ) and ( not rke2_controlplane | bool )

- name: Reload the systemd daemon
  ansible.builtin.systemd:
    daemon_reload: yes
  when: ( rke2_worker | bool ) and ( not rke2_controlplane | bool )

- name: Create the RKE2 config file on the additional nodes that are workers
  blockinfile:
    path: /etc/rancher/rke2/config.yaml
    create: yes
    mode: '0640'
    block: |
      token: {{ rke2_token }}
      server: https://{{ rke2_bootstrap_node }}:9345
      agent:
        log:
          format: text
          level: warn
          output: journald
  when: ( rke2_worker | bool ) and ( not rke2_controlplane | bool )

- name: Enable and restart RKE2 agent on worker nodes
  ansible.builtin.systemd:
    name: rke2-agent
    state: restarted
    enabled: yes
  when: ( rke2_worker | bool ) and ( not rke2_controlplane | bool )
  async: 60
  poll: 10

- name: Label the additional nodes as worker
  delegate_to: "{{ rke2_bootstrap_node }}"
  ansible.builtin.shell: |
    /var/lib/rancher/rke2/bin/kubectl label node {{ awx_subdomain }} node-role.kubernetes.io/worker=worker --overwrite
  environment:
    KUBECONFIG: "/etc/rancher/rke2/rke2.yaml"
  when: rke2_worker | bool

- name: Confirm cluster is functional
  delegate_to: "{{ rke2_bootstrap_node }}"
  ansible.builtin.shell: |
      /var/lib/rancher/rke2/bin/kubectl get nodes --kubeconfig /etc/rancher/rke2/rke2.yaml
  register: cluster_status
  run_once: True

- name: Display cluster status output
  ansible.builtin.debug:
    msg: "{{ cluster_status.stdout_lines }}"
  run_once: True